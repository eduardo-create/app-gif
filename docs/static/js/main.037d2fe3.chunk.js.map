{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","setImages","useEffect","then","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE4CC,UAAUH,GAFtD,sDAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAW,OAAhB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,EAA4Bd,mBAAU,IAAtC,mBAAO2B,EAAP,KAAeO,EAAf,KAUA,OANAC,qBAAW,WACPtB,EAASC,GACJsB,KAAMF,KACZ,CAACpB,IAIF,qCACE,mCAAMA,EAAN,OACA,qBAAKgB,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aClBrBY,EAAe,WAExB,MAAoCrC,mBAAS,CAAC,KAA9C,mBAAOsC,EAAP,KAAmBvC,EAAnB,KAKA,OACI,gCACI,kDACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEQuC,EAAWf,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MChBlCyB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.037d2fe3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n\r\n    //mando mediante las prop el valor del input al componente gif, donde quiero que se rendericen las entradas \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //validar que el campo no este vacio\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cat => [ inputValue, ...cat ]);\r\n            setInputValue('');\r\n        }\r\n       \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=NcK1BY5926NLyFRphyeG6EnXlevsSNme`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }) \r\n\r\n    return gifs;\r\n    \r\n};\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className= \"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n// import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {getGifs} from '../helpers/getGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n     \r\n    const [images, setImages] = useState( [] );\r\n\r\n    \r\n    \r\n    useEffect( () => {\r\n        getGifs( category)\r\n            .then( setImages);\r\n    }, [category] );\r\n\r\n    \r\n    return (\r\n      <>\r\n        <h3> {category} </h3>\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\n  \r\n\r\n\r\n","import React from 'react'\r\nimport { useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Buscador de Gifs</h2>\r\n            <AddCategory  setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n\r\n                        <GifGrid\r\n                            key={ category }  \r\n                            category={ category }\r\n\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}